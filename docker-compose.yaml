name: vocab

services:

  auth:
    container_name: vocab-auth
    image: quay.io/keycloak/keycloak:25.0.2
    environment:
      - KC_DB=postgres
      - KC_DB_USERNAME=${KC_DB_USERNAME}
      - KC_DB_PASSWORD=${KC_DB_PASSWORD}
      - KC_DB_URL=${KC_DB_URL}
      - KC_PROXY_HEADERS=xforwarded
      - KC_HOSTNAME_STRICT=false
      - KC_HTTP_ENABLED=true
    networks:
      vocab_net:
        ipv4_address: 172.18.0.4
    ports:
      - "8080:8080"
    healthcheck:
      test: [ "CMD-SHELL", "exec 3<>/dev/tcp/127.0.0.1/9000;echo -e 'GET /health/ready HTTP/1.1\r host: http://localhost\r Connection: close\r \r ' >&3;if [ $? -eq 0 ]; then echo 'Healthcheck Successful';exit 0;else echo 'Healthcheck Failed';exit 1;fi;" ]
      interval: 5s
      timeout: 5s
      retries: 30
    command: [ "start" ]
  # ---------------------------------------------
  backend:
    container_name: vocab-backend
    build: ../vocab-server/
    environment:
      - ConnectionStrings__PostgreSql=${BACKEND_POSTGRES_CONN_STRING}
      - ConnectionStrings__HangfireConnection=${BACKEND_HANGFIRE_DB_CONN_STRING}
      - Keycloak__auth-server-url=${BACKEND_KC_URL}
      - Keycloak__realm=${BACKEND_KC_REALM}
      - Keycloak__resource=${BACKEND_KC_CLIENT_ID}
      - Keycloak__credentials__secret=${BACKEND_KC_CLIENT_SECRET}
      - Cors__Origins=${BACKEND_CORS_ORIGINS}
    volumes:
      - backend_vol:/app/logs:rw
    networks:
      vocab_net:
        ipv4_address: 172.18.0.2
    ports:
      - "5000:8080"
    depends_on:
      auth:
        condition: service_healthy
  # ---------------------------------------------
  # frontend:
  #   container_name: vocab-frontend
  #   build: ../vocab-client/
  #   networks:
  #     vocab_net:
  #       ipv4_address: 172.18.0.3
  #   ports: -"5000:3000"
  #   depends_on:
  #     backend:
  #       condition: service_healthy

networks:
  vocab_net:
    ipam:
      config:
        - subnet: 172.18.0.0/16

volumes:
  backend_vol:
